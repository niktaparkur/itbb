from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.utils.markdown import hbold

from bot.keyboards import start_kb, search_type_kb
from db.repository import UserRepo

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message, user_repo: UserRepo):
    await user_repo.get_or_create_user(message.from_user.id, message.from_user.username)

    user_name = hbold(message.from_user.full_name)

    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëãüèª\n\n"
        "–ù—É —á—Ç–æ, –ø—Ä–æ–≤–µ—Ä–∏–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏—Å–∫–æ–º—ã–π —Ä–µ—Å—É—Ä—Å ¬´–Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π¬ª, "
        "—ç–∫—Å—Ç—Ä–µ–º–∏—Å—Ç—Å–∫–∏–º, —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–º –∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–º—É –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –ø–æ —Ä–µ—à–µ–Ω–∏—é —Å—É–¥–∞ "
        "(—Å–∞–π—Ç—ã –∏–Ω–æ–∞–≥–µ–Ω—Ç–æ–≤, –ø–∏—Ä–∞—Ç—Å–∫–∏–µ –∏ —Ç.–¥.)!"
    )

    await message.answer(welcome_text, reply_markup=start_kb, parse_mode="HTML")


@router.callback_query(F.data == "go_to_check")
async def cb_go_to_check(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:", reply_markup=search_type_kb
    )


@router.message(Command("check"))
async def cmd_check(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:", reply_markup=search_type_kb
    )
